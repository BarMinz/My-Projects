pipeline {
    agent any
    stages {
        stage('Clone') {
            steps {
                git branch: 'main', credentialsId: 'gitlab_credential_id', url: 'http://172.31.30.98/my_projects/weather-app'
                dir('app') {
                    withCredentials([file(credentialsId: 'weather_api_key', variable: 'ENV_FILE')]) {
                        sh 'cp -rf \$ENV_FILE .'
                    }
                }
            }
        }
        stage('Build') {
            steps {
                sh 'docker-compose up -d --build'         
            }
        }
        stage('Test') {
            steps {
               sh 'python3 tests/reachability_test.py'             
            }
        }
        stage('Push to Docker Hub') {
            steps{
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'HUB_USER', passwordVariable: 'HUB_TOKEN')]) {                      
                    sh '''
                        docker login -u $HUB_USER -p $HUB_TOKEN 
                        docker image tag test_weather_app-app $HUB_USER/weather_app:$BUILD_NUMBER
                        docker image push $HUB_USER/weather_app:$BUILD_NUMBER
                        docker image tag test_weather_app-app $HUB_USER/weather_app:latest
                        docker image push $HUB_USER/weather_app:latest
                    '''
                }
            }           
        }
        stage("Deploy") {
            steps{
                sh 'docker context create app --docker host=ssh://ec2-user@172.31.12.168'
                sh 'docker context use app'
                sh 'docker-compose up -d --build --force-recreate'
            }
        }
    }
    post {
       success {
           slackSend channel: '#builds', color: 'good', message: "Build #${env.BUILD_NUMBER} Succeed!"
       }
       failure {
           slackSend channel: '#devops-alerts', color: 'danger', message: "Error in ${env.JOB_NAME} pipeline build ${env.BUILD_NUMBER} logs: (<${env.BUILD_URL}|Open>)"
       }
    }
}
